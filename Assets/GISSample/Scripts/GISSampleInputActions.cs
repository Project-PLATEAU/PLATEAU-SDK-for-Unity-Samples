//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/GISSample/GISSampleInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace PLATEAU.Samples
{
    public partial class @GISSampleInputActions : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @GISSampleInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GISSampleInputActions"",
    ""maps"": [
        {
            ""name"": ""GISSample"",
            ""id"": ""e5b8e29e-3654-4249-9e14-dd8648f8dbf0"",
            ""actions"": [
                {
                    ""name"": ""HorizontalMoveCamera"",
                    ""type"": ""Value"",
                    ""id"": ""fa426d65-f63f-4613-bf12-2404d0bd6912"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""VerticalMoveCamera"",
                    ""type"": ""Value"",
                    ""id"": ""38e32fc5-2dd3-4517-b41c-1cb8c30770d5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""1aca72dc-9921-4124-b45d-0c8cb4a6976e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomCamera"",
                    ""type"": ""Value"",
                    ""id"": ""32641470-8ed9-4df7-90ef-04f321fa3e02"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectObject"",
                    ""type"": ""Button"",
                    ""id"": ""3f91495c-1606-429c-9575-041b48dc1990"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""3543b90c-5ad7-439f-8993-625ef6641210"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""d68f7d60-960e-47ad-8789-da2b715ab2f0"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""6c1d3e2d-7480-4f12-a815-5135616443ec"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""HorizontalMoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""53daa96e-8b47-4d7c-bda8-3ffa9bf8fc3c"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""HorizontalMoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""eeb2da9e-cf46-4794-b69e-8e53ff5fc023"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""e8f8fe38-4a3d-46fd-918d-9ab38320b6c9"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""18ea2163-1c3d-41fb-9775-d36b7554644f"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.2,y=0.2)"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6005b4c5-be0b-44e5-bb27-dcf1e9f90680"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0.2)"",
                    ""groups"": """",
                    ""action"": ""ZoomCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""6822ddf7-199e-4223-87c2-7f87e480c657"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""VerticalMoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""2ee3bc37-3069-45f1-86e0-bbcd9676cb17"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""VerticalMoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8718bf21-7d65-460a-800d-6cffc8404bbb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""VerticalMoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Two Modifiers"",
                    ""id"": ""a0f19301-5f17-48fd-bc30-91d525215167"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VerticalMoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier1"",
                    ""id"": ""1a5a75af-48df-4452-9b18-ea89b8618c97"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""VerticalMoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier2"",
                    ""id"": ""b47dd027-48eb-43d6-bb51-efedec9666f7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""VerticalMoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""41f83c6a-2252-4ae1-85f8-33d15b80fd86"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2"",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""VerticalMoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a0311b0a-e755-4723-a85a-c75d14cbe90d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""442611f7-112e-4bda-9161-74e183216453"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74115321-a83f-4235-82d7-5e479b030377"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69169da1-8496-46e4-a123-41bb827e82df"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""SelectObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardAndMouse"",
            ""bindingGroup"": ""KeyboardAndMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // GISSample
            m_GISSample = asset.FindActionMap("GISSample", throwIfNotFound: true);
            m_GISSample_HorizontalMoveCamera = m_GISSample.FindAction("HorizontalMoveCamera", throwIfNotFound: true);
            m_GISSample_VerticalMoveCamera = m_GISSample.FindAction("VerticalMoveCamera", throwIfNotFound: true);
            m_GISSample_RotateCamera = m_GISSample.FindAction("RotateCamera", throwIfNotFound: true);
            m_GISSample_ZoomCamera = m_GISSample.FindAction("ZoomCamera", throwIfNotFound: true);
            m_GISSample_SelectObject = m_GISSample.FindAction("SelectObject", throwIfNotFound: true);
            m_GISSample_Click = m_GISSample.FindAction("Click", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // GISSample
        private readonly InputActionMap m_GISSample;
        private IGISSampleActions m_GISSampleActionsCallbackInterface;
        private readonly InputAction m_GISSample_HorizontalMoveCamera;
        private readonly InputAction m_GISSample_VerticalMoveCamera;
        private readonly InputAction m_GISSample_RotateCamera;
        private readonly InputAction m_GISSample_ZoomCamera;
        private readonly InputAction m_GISSample_SelectObject;
        private readonly InputAction m_GISSample_Click;
        public struct GISSampleActions
        {
            private @GISSampleInputActions m_Wrapper;
            public GISSampleActions(@GISSampleInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @HorizontalMoveCamera => m_Wrapper.m_GISSample_HorizontalMoveCamera;
            public InputAction @VerticalMoveCamera => m_Wrapper.m_GISSample_VerticalMoveCamera;
            public InputAction @RotateCamera => m_Wrapper.m_GISSample_RotateCamera;
            public InputAction @ZoomCamera => m_Wrapper.m_GISSample_ZoomCamera;
            public InputAction @SelectObject => m_Wrapper.m_GISSample_SelectObject;
            public InputAction @Click => m_Wrapper.m_GISSample_Click;
            public InputActionMap Get() { return m_Wrapper.m_GISSample; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GISSampleActions set) { return set.Get(); }
            public void SetCallbacks(IGISSampleActions instance)
            {
                if (m_Wrapper.m_GISSampleActionsCallbackInterface != null)
                {
                    @HorizontalMoveCamera.started -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnHorizontalMoveCamera;
                    @HorizontalMoveCamera.performed -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnHorizontalMoveCamera;
                    @HorizontalMoveCamera.canceled -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnHorizontalMoveCamera;
                    @VerticalMoveCamera.started -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnVerticalMoveCamera;
                    @VerticalMoveCamera.performed -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnVerticalMoveCamera;
                    @VerticalMoveCamera.canceled -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnVerticalMoveCamera;
                    @RotateCamera.started -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnRotateCamera;
                    @RotateCamera.performed -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnRotateCamera;
                    @RotateCamera.canceled -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnRotateCamera;
                    @ZoomCamera.started -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnZoomCamera;
                    @ZoomCamera.performed -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnZoomCamera;
                    @ZoomCamera.canceled -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnZoomCamera;
                    @SelectObject.started -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnSelectObject;
                    @SelectObject.performed -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnSelectObject;
                    @SelectObject.canceled -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnSelectObject;
                    @Click.started -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnClick;
                    @Click.performed -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnClick;
                    @Click.canceled -= m_Wrapper.m_GISSampleActionsCallbackInterface.OnClick;
                }
                m_Wrapper.m_GISSampleActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @HorizontalMoveCamera.started += instance.OnHorizontalMoveCamera;
                    @HorizontalMoveCamera.performed += instance.OnHorizontalMoveCamera;
                    @HorizontalMoveCamera.canceled += instance.OnHorizontalMoveCamera;
                    @VerticalMoveCamera.started += instance.OnVerticalMoveCamera;
                    @VerticalMoveCamera.performed += instance.OnVerticalMoveCamera;
                    @VerticalMoveCamera.canceled += instance.OnVerticalMoveCamera;
                    @RotateCamera.started += instance.OnRotateCamera;
                    @RotateCamera.performed += instance.OnRotateCamera;
                    @RotateCamera.canceled += instance.OnRotateCamera;
                    @ZoomCamera.started += instance.OnZoomCamera;
                    @ZoomCamera.performed += instance.OnZoomCamera;
                    @ZoomCamera.canceled += instance.OnZoomCamera;
                    @SelectObject.started += instance.OnSelectObject;
                    @SelectObject.performed += instance.OnSelectObject;
                    @SelectObject.canceled += instance.OnSelectObject;
                    @Click.started += instance.OnClick;
                    @Click.performed += instance.OnClick;
                    @Click.canceled += instance.OnClick;
                }
            }
        }
        public GISSampleActions @GISSample => new GISSampleActions(this);
        private int m_KeyboardAndMouseSchemeIndex = -1;
        public InputControlScheme KeyboardAndMouseScheme
        {
            get
            {
                if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardAndMouse");
                return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
            }
        }
        public interface IGISSampleActions
        {
            void OnHorizontalMoveCamera(InputAction.CallbackContext context);
            void OnVerticalMoveCamera(InputAction.CallbackContext context);
            void OnRotateCamera(InputAction.CallbackContext context);
            void OnZoomCamera(InputAction.CallbackContext context);
            void OnSelectObject(InputAction.CallbackContext context);
            void OnClick(InputAction.CallbackContext context);
        }
    }
}
